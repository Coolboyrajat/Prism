# Telegram/TMessagesProj/src/main/java/org/telegram/ui/Components/SwipeGestureSettingsView.java

    // New Swipe Gesture Option 'ADVANCE'

34.    public static final int SWIPE_GESTURE_ADVANCED = 6;


45.    private boolean isCustomizeMode = false;
46.
47.    private int[] customAdvancedColors = new int[] {
48.        Theme.key_chats_muteBackground, 
49.        Theme.key_chats_readBackground,
50.        Theme.key_chats_pinBackground,
51.        Theme.key_dialogSwipeRemove,
52.	       Theme.key_chats_archivePinBackground
53.        Theme.key_chats_foldersBackground
54.    };
55.
56.    String[] strings = new String[7];
57.    int[][] backgroundKeys = new int[7][]; 
58.    RLottieDrawable[] icons = new RLottieDrawable[7];  


79.        strings[SWIPE_GESTURE_ADVANCED] = LocaleController.getString(R.string.SwipeSettingsAdvanced);
80.
81.        backgroundKeys[SWIPE_GESTURE_PIN] = new int[] {Theme.key_chats_pinBackground};
82.        backgroundKeys[SWIPE_GESTURE_READ] = new int[] {Theme.key_chats_readBackground};
83.        backgroundKeys[SWIPE_GESTURE_ARCHIVE] = new int[] {Theme.key_chats_archiveBackground};
84.        backgroundKeys[SWIPE_GESTURE_MUTE] = new int[] {Theme.key_chats_muteBackground};
85.        backgroundKeys[SWIPE_GESTURE_DELETE] = new int[] {Theme.key_dialogSwipeRemove};
86.        backgroundKeys[SWIPE_GESTURE_FOLDERS] = new int[] {Theme.key_chats_foldersBackground};
87.        backgroundKeys[SWIPE_GESTURE_ADVANCED] = new int[] {
                Theme.key_chats_muteBackground, 
                Theme.key_chats_readBackground, 
                Theme.key_chats_pinBackground 
91.         };


158.    public void setCustomizeMode(boolean isCustomizeMode) {
159.        this.isCustomizeMode = isCustomizeMode;
160.        invalidate();
161.    }     
162.             
163.    public void updateCustomAdvancedColors(int[] newColors) {      
164.        customAdvancedColors = newColors;       
165.        if (isCustomizeMode) {            
166.            invalidate();        
167.        }           
168.    }    
169.        
170.    private int[] getAdvancedColorArray() {
171.         if (isCustomizeMode) {
172.             return customAdvancedColors;
173.         } else {
174.             return backgroundKeys[SWIPE_GESTURE_ADVANCED];
175.         }
176.     }
177.
178.    private int getConditionIndex() {
179.        int currentValue = picker.getValue();   
180.        int[] colorArray = getAdvancedColorArray();
181.      
182.        if (currentValue < colorArray.length) {
183.            return currentValue;
184.        }
185.        
186.        return Math.min(currentValue, colorArray.length - 1);
187.    }    



263.        if (picker.getValue() == SWIPE_GESTURE_ADVANCED) {
264.            int conditionIndex = getConditionIndex();
265.            color = Theme.getColor(backgroundKeys[SWIPE_GESTURE_ADVANCED][conditionIndex]);
266.        } else if (currentColorKey < 0) {



# Telegram/TMessagesProj/src/main/java/org/telegram/messenger/SharedConfig.java

# Telegram/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java

# Telegram/TMessagesProj/src/main/java/org/telegram/messenger/ChatObject.java

# Telegram/TMessagesProj/src/main/java/org/telegram/ui/SwipeGestureSettingsActivity.java (new File created)

# Telegram/TMessagesProj/src/main/java/org/telegram/Components/ChatListView.java

# Telegram/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/Theme.java

3577.    public static final int key_chats_muteBackground = colorsCount++;
3578.    public static final int key_chats_readBackground = colorsCount++;
3579.    public static final int key_chats_pinBackground = colorsCount++; 


# Telegram/TMessagesProj/src/main/res/values/strings.xml

2594.    <string name="SwipeSettingsAdvanced">Advanced</string>


# Telegram/TMessagesProj/src/main/res/values/colors.xml
